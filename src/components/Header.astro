---
import { getLangFromUrl, useTranslations } from '../i18n/utils';
import LanguageSwitcher from './LanguageSwitcher.astro';
import Logo from './Logo.astro';
import Navigation from './Navigation.astro';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const navItems = ['amenities', 'location', 'pricing', 'masterplan', 'contact'];
---

<header class="fixed w-full z-50 transition-all duration-300 backdrop-blur-sm" id="header">
  <nav class="container mx-auto px-2 py-2 ">
    <div class="flex justify-between items-center px-8 py-4">
      <div class="flex items-center relative z-10">
        <a href="/" class="hover:opacity-90 transition-opacity">
          <Logo />
        </a>
      </div>
      <Navigation />
      <button class="md:hidden relative z-10 text-white group p-2" id="menuButton" aria-label="Toggle menu">
        <div class="w-6 h-5 flex flex-col justify-between">
          <span class="w-full h-0.5 bg-white rounded-full transform transition-all duration-300 origin-left group-hover:bg-xelvana-orange"></span>
          <span class="w-full h-0.5 bg-white rounded-full transform transition-all duration-300 group-hover:bg-xelvana-orange"></span>
          <span class="w-full h-0.5 bg-white rounded-full transform transition-all duration-300 origin-left group-hover:bg-xelvana-orange"></span>
        </div>
      </button>
    </div>
  </nav>

  <!-- Mobile Menu -->
  <div class="md:hidden hidden transform transition-transform duration-300 ease-in-out" id="mobileMenu">
    <div class="mx-4 mt-2 bg-gradient-to-b backdrop-blur-sm rounded-2xl shadow-lg overflow-hidden">
      <div class="p-6 space-y-6">
        {navItems.map((item) => (
          <a
            href={`#${item}`}
            class="block text-white relative group py-2 px-4 rounded-lg transition-all hover:bg-white/10"
          >
            <span class="relative z-10">{t(`nav.${item}`)}</span>
            <span class="absolute bottom-0 left-4 right-4 h-0.5 bg-xelvana-orange scale-x-0 group-hover:scale-x-100 transition-transform duration-300 origin-left"></span>
          </a>
        ))}
        <div class="pt-4 flex justify-center">
          <LanguageSwitcher />
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  // Header scroll behavior
  const header = document.getElementById('header');
  let lastScroll = 0;

 // window.addEventListener('scroll', () => {
 //   const currentScroll = window.pageYOffset;
 //   
 //   if (currentScroll > 80) {
 //     header?.classList.add('py-2');
 //     header?.classList.add('shadow-md');
 //   } else {
 //     header?.classList.remove('py-2');
 //     header?.classList.remove('shadow-md');
 //   }
 //   
 //   lastScroll = currentScroll;
 // });
 

  window.addEventListener('scroll', () => {
    const currentScroll = window.pageYOffset;
    
    if (currentScroll <= 0) {
      header?.classList.remove('py-2');
      header?.classList.remove('-translate-y-full');
    }
    
    if (currentScroll > lastScroll && currentScroll > 80) {
      header?.classList.add('-translate-y-full');
    } else {
      header?.classList.remove('-translate-y-full');
    }
    
    if (currentScroll > 80) {
      header?.classList.add('py-2');
      header?.classList.add('shadow-md');
    } else {
      header?.classList.remove('py-2');
      header?.classList.remove('shadow-md');
    }
    
    lastScroll = currentScroll;
  });

  // Mobile menu
  const menuButton = document.getElementById('menuButton');
  const mobileMenu = document.getElementById('mobileMenu');
  const mobileLinks = mobileMenu?.querySelectorAll('a');

  menuButton?.addEventListener('click', () => {
    mobileMenu?.classList.toggle('hidden');
  });

  // Close mobile menu when clicking on a link
  mobileLinks?.forEach(link => {
    link.addEventListener('click', () => {
      mobileMenu?.classList.add('hidden');
    });
  });
</script>

<style>
  header {
    transform: translateY(0);
    transition: transform 0.3s ease;
  }

  header.-translate-y-full {
    transform: translateY(-100%);
  }
</style>